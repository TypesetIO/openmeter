// Code generated by ent, DO NOT EDIT.

package subscriptionpatchvalueadditem

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/openmeterio/openmeter/openmeter/ent/db/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldID, id))
}

// Namespace applies equality check predicate on the "namespace" field. It's identical to NamespaceEQ.
func Namespace(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldNamespace, v))
}

// SubscriptionPatchID applies equality check predicate on the "subscription_patch_id" field. It's identical to SubscriptionPatchIDEQ.
func SubscriptionPatchID(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldSubscriptionPatchID, v))
}

// PhaseKey applies equality check predicate on the "phase_key" field. It's identical to PhaseKeyEQ.
func PhaseKey(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldPhaseKey, v))
}

// ItemKey applies equality check predicate on the "item_key" field. It's identical to ItemKeyEQ.
func ItemKey(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldItemKey, v))
}

// FeatureKey applies equality check predicate on the "feature_key" field. It's identical to FeatureKeyEQ.
func FeatureKey(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldFeatureKey, v))
}

// CreateEntitlementEntitlementType applies equality check predicate on the "create_entitlement_entitlement_type" field. It's identical to CreateEntitlementEntitlementTypeEQ.
func CreateEntitlementEntitlementType(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementMeasureUsageFrom applies equality check predicate on the "create_entitlement_measure_usage_from" field. It's identical to CreateEntitlementMeasureUsageFromEQ.
func CreateEntitlementMeasureUsageFrom(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementMeasureUsageFrom, v))
}

// CreateEntitlementIssueAfterReset applies equality check predicate on the "create_entitlement_issue_after_reset" field. It's identical to CreateEntitlementIssueAfterResetEQ.
func CreateEntitlementIssueAfterReset(v float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementIssueAfterReset, v))
}

// CreateEntitlementIssueAfterResetPriority applies equality check predicate on the "create_entitlement_issue_after_reset_priority" field. It's identical to CreateEntitlementIssueAfterResetPriorityEQ.
func CreateEntitlementIssueAfterResetPriority(v uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementIssueAfterResetPriority, v))
}

// CreateEntitlementIsSoftLimit applies equality check predicate on the "create_entitlement_is_soft_limit" field. It's identical to CreateEntitlementIsSoftLimitEQ.
func CreateEntitlementIsSoftLimit(v bool) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementIsSoftLimit, v))
}

// CreateEntitlementPreserveOverageAtReset applies equality check predicate on the "create_entitlement_preserve_overage_at_reset" field. It's identical to CreateEntitlementPreserveOverageAtResetEQ.
func CreateEntitlementPreserveOverageAtReset(v bool) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementPreserveOverageAtReset, v))
}

// CreateEntitlementUsagePeriodInterval applies equality check predicate on the "create_entitlement_usage_period_interval" field. It's identical to CreateEntitlementUsagePeriodIntervalEQ.
func CreateEntitlementUsagePeriodInterval(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodAnchor applies equality check predicate on the "create_entitlement_usage_period_anchor" field. It's identical to CreateEntitlementUsagePeriodAnchorEQ.
func CreateEntitlementUsagePeriodAnchor(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementUsagePeriodAnchor, v))
}

// CreatePriceValue applies equality check predicate on the "create_price_value" field. It's identical to CreatePriceValueEQ.
func CreatePriceValue(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreatePriceValue, v))
}

// NamespaceEQ applies the EQ predicate on the "namespace" field.
func NamespaceEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldNamespace, v))
}

// NamespaceNEQ applies the NEQ predicate on the "namespace" field.
func NamespaceNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldNamespace, v))
}

// NamespaceIn applies the In predicate on the "namespace" field.
func NamespaceIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldNamespace, vs...))
}

// NamespaceNotIn applies the NotIn predicate on the "namespace" field.
func NamespaceNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldNamespace, vs...))
}

// NamespaceGT applies the GT predicate on the "namespace" field.
func NamespaceGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldNamespace, v))
}

// NamespaceGTE applies the GTE predicate on the "namespace" field.
func NamespaceGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldNamespace, v))
}

// NamespaceLT applies the LT predicate on the "namespace" field.
func NamespaceLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldNamespace, v))
}

// NamespaceLTE applies the LTE predicate on the "namespace" field.
func NamespaceLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldNamespace, v))
}

// NamespaceContains applies the Contains predicate on the "namespace" field.
func NamespaceContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldNamespace, v))
}

// NamespaceHasPrefix applies the HasPrefix predicate on the "namespace" field.
func NamespaceHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldNamespace, v))
}

// NamespaceHasSuffix applies the HasSuffix predicate on the "namespace" field.
func NamespaceHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldNamespace, v))
}

// NamespaceEqualFold applies the EqualFold predicate on the "namespace" field.
func NamespaceEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldNamespace, v))
}

// NamespaceContainsFold applies the ContainsFold predicate on the "namespace" field.
func NamespaceContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldNamespace, v))
}

// SubscriptionPatchIDEQ applies the EQ predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDNEQ applies the NEQ predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDIn applies the In predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldSubscriptionPatchID, vs...))
}

// SubscriptionPatchIDNotIn applies the NotIn predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldSubscriptionPatchID, vs...))
}

// SubscriptionPatchIDGT applies the GT predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDGTE applies the GTE predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDLT applies the LT predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDLTE applies the LTE predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDContains applies the Contains predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDHasPrefix applies the HasPrefix predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDHasSuffix applies the HasSuffix predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDEqualFold applies the EqualFold predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldSubscriptionPatchID, v))
}

// SubscriptionPatchIDContainsFold applies the ContainsFold predicate on the "subscription_patch_id" field.
func SubscriptionPatchIDContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldSubscriptionPatchID, v))
}

// PhaseKeyEQ applies the EQ predicate on the "phase_key" field.
func PhaseKeyEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldPhaseKey, v))
}

// PhaseKeyNEQ applies the NEQ predicate on the "phase_key" field.
func PhaseKeyNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldPhaseKey, v))
}

// PhaseKeyIn applies the In predicate on the "phase_key" field.
func PhaseKeyIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldPhaseKey, vs...))
}

// PhaseKeyNotIn applies the NotIn predicate on the "phase_key" field.
func PhaseKeyNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldPhaseKey, vs...))
}

// PhaseKeyGT applies the GT predicate on the "phase_key" field.
func PhaseKeyGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldPhaseKey, v))
}

// PhaseKeyGTE applies the GTE predicate on the "phase_key" field.
func PhaseKeyGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldPhaseKey, v))
}

// PhaseKeyLT applies the LT predicate on the "phase_key" field.
func PhaseKeyLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldPhaseKey, v))
}

// PhaseKeyLTE applies the LTE predicate on the "phase_key" field.
func PhaseKeyLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldPhaseKey, v))
}

// PhaseKeyContains applies the Contains predicate on the "phase_key" field.
func PhaseKeyContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldPhaseKey, v))
}

// PhaseKeyHasPrefix applies the HasPrefix predicate on the "phase_key" field.
func PhaseKeyHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldPhaseKey, v))
}

// PhaseKeyHasSuffix applies the HasSuffix predicate on the "phase_key" field.
func PhaseKeyHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldPhaseKey, v))
}

// PhaseKeyEqualFold applies the EqualFold predicate on the "phase_key" field.
func PhaseKeyEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldPhaseKey, v))
}

// PhaseKeyContainsFold applies the ContainsFold predicate on the "phase_key" field.
func PhaseKeyContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldPhaseKey, v))
}

// ItemKeyEQ applies the EQ predicate on the "item_key" field.
func ItemKeyEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldItemKey, v))
}

// ItemKeyNEQ applies the NEQ predicate on the "item_key" field.
func ItemKeyNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldItemKey, v))
}

// ItemKeyIn applies the In predicate on the "item_key" field.
func ItemKeyIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldItemKey, vs...))
}

// ItemKeyNotIn applies the NotIn predicate on the "item_key" field.
func ItemKeyNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldItemKey, vs...))
}

// ItemKeyGT applies the GT predicate on the "item_key" field.
func ItemKeyGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldItemKey, v))
}

// ItemKeyGTE applies the GTE predicate on the "item_key" field.
func ItemKeyGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldItemKey, v))
}

// ItemKeyLT applies the LT predicate on the "item_key" field.
func ItemKeyLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldItemKey, v))
}

// ItemKeyLTE applies the LTE predicate on the "item_key" field.
func ItemKeyLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldItemKey, v))
}

// ItemKeyContains applies the Contains predicate on the "item_key" field.
func ItemKeyContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldItemKey, v))
}

// ItemKeyHasPrefix applies the HasPrefix predicate on the "item_key" field.
func ItemKeyHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldItemKey, v))
}

// ItemKeyHasSuffix applies the HasSuffix predicate on the "item_key" field.
func ItemKeyHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldItemKey, v))
}

// ItemKeyEqualFold applies the EqualFold predicate on the "item_key" field.
func ItemKeyEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldItemKey, v))
}

// ItemKeyContainsFold applies the ContainsFold predicate on the "item_key" field.
func ItemKeyContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldItemKey, v))
}

// FeatureKeyEQ applies the EQ predicate on the "feature_key" field.
func FeatureKeyEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldFeatureKey, v))
}

// FeatureKeyNEQ applies the NEQ predicate on the "feature_key" field.
func FeatureKeyNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldFeatureKey, v))
}

// FeatureKeyIn applies the In predicate on the "feature_key" field.
func FeatureKeyIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldFeatureKey, vs...))
}

// FeatureKeyNotIn applies the NotIn predicate on the "feature_key" field.
func FeatureKeyNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldFeatureKey, vs...))
}

// FeatureKeyGT applies the GT predicate on the "feature_key" field.
func FeatureKeyGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldFeatureKey, v))
}

// FeatureKeyGTE applies the GTE predicate on the "feature_key" field.
func FeatureKeyGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldFeatureKey, v))
}

// FeatureKeyLT applies the LT predicate on the "feature_key" field.
func FeatureKeyLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldFeatureKey, v))
}

// FeatureKeyLTE applies the LTE predicate on the "feature_key" field.
func FeatureKeyLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldFeatureKey, v))
}

// FeatureKeyContains applies the Contains predicate on the "feature_key" field.
func FeatureKeyContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldFeatureKey, v))
}

// FeatureKeyHasPrefix applies the HasPrefix predicate on the "feature_key" field.
func FeatureKeyHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldFeatureKey, v))
}

// FeatureKeyHasSuffix applies the HasSuffix predicate on the "feature_key" field.
func FeatureKeyHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldFeatureKey, v))
}

// FeatureKeyIsNil applies the IsNil predicate on the "feature_key" field.
func FeatureKeyIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldFeatureKey))
}

// FeatureKeyNotNil applies the NotNil predicate on the "feature_key" field.
func FeatureKeyNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldFeatureKey))
}

// FeatureKeyEqualFold applies the EqualFold predicate on the "feature_key" field.
func FeatureKeyEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldFeatureKey, v))
}

// FeatureKeyContainsFold applies the ContainsFold predicate on the "feature_key" field.
func FeatureKeyContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldFeatureKey, v))
}

// CreateEntitlementEntitlementTypeEQ applies the EQ predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeNEQ applies the NEQ predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeIn applies the In predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldCreateEntitlementEntitlementType, vs...))
}

// CreateEntitlementEntitlementTypeNotIn applies the NotIn predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldCreateEntitlementEntitlementType, vs...))
}

// CreateEntitlementEntitlementTypeGT applies the GT predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeGTE applies the GTE predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeLT applies the LT predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeLTE applies the LTE predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeContains applies the Contains predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeHasPrefix applies the HasPrefix predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeHasSuffix applies the HasSuffix predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeIsNil applies the IsNil predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementEntitlementType))
}

// CreateEntitlementEntitlementTypeNotNil applies the NotNil predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementEntitlementType))
}

// CreateEntitlementEntitlementTypeEqualFold applies the EqualFold predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementEntitlementTypeContainsFold applies the ContainsFold predicate on the "create_entitlement_entitlement_type" field.
func CreateEntitlementEntitlementTypeContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldCreateEntitlementEntitlementType, v))
}

// CreateEntitlementMeasureUsageFromEQ applies the EQ predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromEQ(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementMeasureUsageFrom, v))
}

// CreateEntitlementMeasureUsageFromNEQ applies the NEQ predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromNEQ(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementMeasureUsageFrom, v))
}

// CreateEntitlementMeasureUsageFromIn applies the In predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromIn(vs ...time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldCreateEntitlementMeasureUsageFrom, vs...))
}

// CreateEntitlementMeasureUsageFromNotIn applies the NotIn predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromNotIn(vs ...time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldCreateEntitlementMeasureUsageFrom, vs...))
}

// CreateEntitlementMeasureUsageFromGT applies the GT predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromGT(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldCreateEntitlementMeasureUsageFrom, v))
}

// CreateEntitlementMeasureUsageFromGTE applies the GTE predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromGTE(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldCreateEntitlementMeasureUsageFrom, v))
}

// CreateEntitlementMeasureUsageFromLT applies the LT predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromLT(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldCreateEntitlementMeasureUsageFrom, v))
}

// CreateEntitlementMeasureUsageFromLTE applies the LTE predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromLTE(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldCreateEntitlementMeasureUsageFrom, v))
}

// CreateEntitlementMeasureUsageFromIsNil applies the IsNil predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementMeasureUsageFrom))
}

// CreateEntitlementMeasureUsageFromNotNil applies the NotNil predicate on the "create_entitlement_measure_usage_from" field.
func CreateEntitlementMeasureUsageFromNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementMeasureUsageFrom))
}

// CreateEntitlementIssueAfterResetEQ applies the EQ predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetEQ(v float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementIssueAfterReset, v))
}

// CreateEntitlementIssueAfterResetNEQ applies the NEQ predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetNEQ(v float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementIssueAfterReset, v))
}

// CreateEntitlementIssueAfterResetIn applies the In predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetIn(vs ...float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldCreateEntitlementIssueAfterReset, vs...))
}

// CreateEntitlementIssueAfterResetNotIn applies the NotIn predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetNotIn(vs ...float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldCreateEntitlementIssueAfterReset, vs...))
}

// CreateEntitlementIssueAfterResetGT applies the GT predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetGT(v float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldCreateEntitlementIssueAfterReset, v))
}

// CreateEntitlementIssueAfterResetGTE applies the GTE predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetGTE(v float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldCreateEntitlementIssueAfterReset, v))
}

// CreateEntitlementIssueAfterResetLT applies the LT predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetLT(v float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldCreateEntitlementIssueAfterReset, v))
}

// CreateEntitlementIssueAfterResetLTE applies the LTE predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetLTE(v float64) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldCreateEntitlementIssueAfterReset, v))
}

// CreateEntitlementIssueAfterResetIsNil applies the IsNil predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementIssueAfterReset))
}

// CreateEntitlementIssueAfterResetNotNil applies the NotNil predicate on the "create_entitlement_issue_after_reset" field.
func CreateEntitlementIssueAfterResetNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementIssueAfterReset))
}

// CreateEntitlementIssueAfterResetPriorityEQ applies the EQ predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityEQ(v uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementIssueAfterResetPriority, v))
}

// CreateEntitlementIssueAfterResetPriorityNEQ applies the NEQ predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityNEQ(v uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementIssueAfterResetPriority, v))
}

// CreateEntitlementIssueAfterResetPriorityIn applies the In predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityIn(vs ...uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldCreateEntitlementIssueAfterResetPriority, vs...))
}

// CreateEntitlementIssueAfterResetPriorityNotIn applies the NotIn predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityNotIn(vs ...uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldCreateEntitlementIssueAfterResetPriority, vs...))
}

// CreateEntitlementIssueAfterResetPriorityGT applies the GT predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityGT(v uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldCreateEntitlementIssueAfterResetPriority, v))
}

// CreateEntitlementIssueAfterResetPriorityGTE applies the GTE predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityGTE(v uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldCreateEntitlementIssueAfterResetPriority, v))
}

// CreateEntitlementIssueAfterResetPriorityLT applies the LT predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityLT(v uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldCreateEntitlementIssueAfterResetPriority, v))
}

// CreateEntitlementIssueAfterResetPriorityLTE applies the LTE predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityLTE(v uint8) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldCreateEntitlementIssueAfterResetPriority, v))
}

// CreateEntitlementIssueAfterResetPriorityIsNil applies the IsNil predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementIssueAfterResetPriority))
}

// CreateEntitlementIssueAfterResetPriorityNotNil applies the NotNil predicate on the "create_entitlement_issue_after_reset_priority" field.
func CreateEntitlementIssueAfterResetPriorityNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementIssueAfterResetPriority))
}

// CreateEntitlementIsSoftLimitEQ applies the EQ predicate on the "create_entitlement_is_soft_limit" field.
func CreateEntitlementIsSoftLimitEQ(v bool) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementIsSoftLimit, v))
}

// CreateEntitlementIsSoftLimitNEQ applies the NEQ predicate on the "create_entitlement_is_soft_limit" field.
func CreateEntitlementIsSoftLimitNEQ(v bool) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementIsSoftLimit, v))
}

// CreateEntitlementIsSoftLimitIsNil applies the IsNil predicate on the "create_entitlement_is_soft_limit" field.
func CreateEntitlementIsSoftLimitIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementIsSoftLimit))
}

// CreateEntitlementIsSoftLimitNotNil applies the NotNil predicate on the "create_entitlement_is_soft_limit" field.
func CreateEntitlementIsSoftLimitNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementIsSoftLimit))
}

// CreateEntitlementPreserveOverageAtResetEQ applies the EQ predicate on the "create_entitlement_preserve_overage_at_reset" field.
func CreateEntitlementPreserveOverageAtResetEQ(v bool) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementPreserveOverageAtReset, v))
}

// CreateEntitlementPreserveOverageAtResetNEQ applies the NEQ predicate on the "create_entitlement_preserve_overage_at_reset" field.
func CreateEntitlementPreserveOverageAtResetNEQ(v bool) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementPreserveOverageAtReset, v))
}

// CreateEntitlementPreserveOverageAtResetIsNil applies the IsNil predicate on the "create_entitlement_preserve_overage_at_reset" field.
func CreateEntitlementPreserveOverageAtResetIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementPreserveOverageAtReset))
}

// CreateEntitlementPreserveOverageAtResetNotNil applies the NotNil predicate on the "create_entitlement_preserve_overage_at_reset" field.
func CreateEntitlementPreserveOverageAtResetNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementPreserveOverageAtReset))
}

// CreateEntitlementConfigIsNil applies the IsNil predicate on the "create_entitlement_config" field.
func CreateEntitlementConfigIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementConfig))
}

// CreateEntitlementConfigNotNil applies the NotNil predicate on the "create_entitlement_config" field.
func CreateEntitlementConfigNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementConfig))
}

// CreateEntitlementUsagePeriodIntervalEQ applies the EQ predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalNEQ applies the NEQ predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalIn applies the In predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldCreateEntitlementUsagePeriodInterval, vs...))
}

// CreateEntitlementUsagePeriodIntervalNotIn applies the NotIn predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldCreateEntitlementUsagePeriodInterval, vs...))
}

// CreateEntitlementUsagePeriodIntervalGT applies the GT predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalGTE applies the GTE predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalLT applies the LT predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalLTE applies the LTE predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalContains applies the Contains predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalHasPrefix applies the HasPrefix predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalHasSuffix applies the HasSuffix predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalIsNil applies the IsNil predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementUsagePeriodInterval))
}

// CreateEntitlementUsagePeriodIntervalNotNil applies the NotNil predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementUsagePeriodInterval))
}

// CreateEntitlementUsagePeriodIntervalEqualFold applies the EqualFold predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodIntervalContainsFold applies the ContainsFold predicate on the "create_entitlement_usage_period_interval" field.
func CreateEntitlementUsagePeriodIntervalContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldCreateEntitlementUsagePeriodInterval, v))
}

// CreateEntitlementUsagePeriodAnchorEQ applies the EQ predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorEQ(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreateEntitlementUsagePeriodAnchor, v))
}

// CreateEntitlementUsagePeriodAnchorNEQ applies the NEQ predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorNEQ(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreateEntitlementUsagePeriodAnchor, v))
}

// CreateEntitlementUsagePeriodAnchorIn applies the In predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorIn(vs ...time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldCreateEntitlementUsagePeriodAnchor, vs...))
}

// CreateEntitlementUsagePeriodAnchorNotIn applies the NotIn predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorNotIn(vs ...time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldCreateEntitlementUsagePeriodAnchor, vs...))
}

// CreateEntitlementUsagePeriodAnchorGT applies the GT predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorGT(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldCreateEntitlementUsagePeriodAnchor, v))
}

// CreateEntitlementUsagePeriodAnchorGTE applies the GTE predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorGTE(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldCreateEntitlementUsagePeriodAnchor, v))
}

// CreateEntitlementUsagePeriodAnchorLT applies the LT predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorLT(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldCreateEntitlementUsagePeriodAnchor, v))
}

// CreateEntitlementUsagePeriodAnchorLTE applies the LTE predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorLTE(v time.Time) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldCreateEntitlementUsagePeriodAnchor, v))
}

// CreateEntitlementUsagePeriodAnchorIsNil applies the IsNil predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreateEntitlementUsagePeriodAnchor))
}

// CreateEntitlementUsagePeriodAnchorNotNil applies the NotNil predicate on the "create_entitlement_usage_period_anchor" field.
func CreateEntitlementUsagePeriodAnchorNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreateEntitlementUsagePeriodAnchor))
}

// CreatePriceValueEQ applies the EQ predicate on the "create_price_value" field.
func CreatePriceValueEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEQ(FieldCreatePriceValue, v))
}

// CreatePriceValueNEQ applies the NEQ predicate on the "create_price_value" field.
func CreatePriceValueNEQ(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNEQ(FieldCreatePriceValue, v))
}

// CreatePriceValueIn applies the In predicate on the "create_price_value" field.
func CreatePriceValueIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIn(FieldCreatePriceValue, vs...))
}

// CreatePriceValueNotIn applies the NotIn predicate on the "create_price_value" field.
func CreatePriceValueNotIn(vs ...string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotIn(FieldCreatePriceValue, vs...))
}

// CreatePriceValueGT applies the GT predicate on the "create_price_value" field.
func CreatePriceValueGT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGT(FieldCreatePriceValue, v))
}

// CreatePriceValueGTE applies the GTE predicate on the "create_price_value" field.
func CreatePriceValueGTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldGTE(FieldCreatePriceValue, v))
}

// CreatePriceValueLT applies the LT predicate on the "create_price_value" field.
func CreatePriceValueLT(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLT(FieldCreatePriceValue, v))
}

// CreatePriceValueLTE applies the LTE predicate on the "create_price_value" field.
func CreatePriceValueLTE(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldLTE(FieldCreatePriceValue, v))
}

// CreatePriceValueContains applies the Contains predicate on the "create_price_value" field.
func CreatePriceValueContains(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContains(FieldCreatePriceValue, v))
}

// CreatePriceValueHasPrefix applies the HasPrefix predicate on the "create_price_value" field.
func CreatePriceValueHasPrefix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasPrefix(FieldCreatePriceValue, v))
}

// CreatePriceValueHasSuffix applies the HasSuffix predicate on the "create_price_value" field.
func CreatePriceValueHasSuffix(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldHasSuffix(FieldCreatePriceValue, v))
}

// CreatePriceValueIsNil applies the IsNil predicate on the "create_price_value" field.
func CreatePriceValueIsNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldIsNull(FieldCreatePriceValue))
}

// CreatePriceValueNotNil applies the NotNil predicate on the "create_price_value" field.
func CreatePriceValueNotNil() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldNotNull(FieldCreatePriceValue))
}

// CreatePriceValueEqualFold applies the EqualFold predicate on the "create_price_value" field.
func CreatePriceValueEqualFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldEqualFold(FieldCreatePriceValue, v))
}

// CreatePriceValueContainsFold applies the ContainsFold predicate on the "create_price_value" field.
func CreatePriceValueContainsFold(v string) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.FieldContainsFold(FieldCreatePriceValue, v))
}

// HasSubscriptionPatch applies the HasEdge predicate on the "subscription_patch" edge.
func HasSubscriptionPatch() predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, SubscriptionPatchTable, SubscriptionPatchColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSubscriptionPatchWith applies the HasEdge predicate on the "subscription_patch" edge with a given conditions (other predicates).
func HasSubscriptionPatchWith(preds ...predicate.SubscriptionPatch) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(func(s *sql.Selector) {
		step := newSubscriptionPatchStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SubscriptionPatchValueAddItem) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SubscriptionPatchValueAddItem) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SubscriptionPatchValueAddItem) predicate.SubscriptionPatchValueAddItem {
	return predicate.SubscriptionPatchValueAddItem(sql.NotPredicates(p))
}
