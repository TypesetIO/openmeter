// Code generated by ent, DO NOT EDIT.

package billingworkflowconfigoverride

import (
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/openmeterio/openmeter/openmeter/billing"
)

const (
	// Label holds the string label denoting the billingworkflowconfigoverride type in the database.
	Label = "billing_workflow_config_override"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNamespace holds the string denoting the namespace field in the database.
	FieldNamespace = "namespace"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldAlignment holds the string denoting the alignment field in the database.
	FieldAlignment = "alignment"
	// FieldItemCollectionPeriodSeconds holds the string denoting the item_collection_period_seconds field in the database.
	FieldItemCollectionPeriodSeconds = "item_collection_period_seconds"
	// FieldInvoiceAutoAdvance holds the string denoting the invoice_auto_advance field in the database.
	FieldInvoiceAutoAdvance = "invoice_auto_advance"
	// FieldInvoiceDraftPeriodSeconds holds the string denoting the invoice_draft_period_seconds field in the database.
	FieldInvoiceDraftPeriodSeconds = "invoice_draft_period_seconds"
	// FieldInvoiceDueAfterSeconds holds the string denoting the invoice_due_after_seconds field in the database.
	FieldInvoiceDueAfterSeconds = "invoice_due_after_seconds"
	// FieldInvoiceCollectionMethod holds the string denoting the invoice_collection_method field in the database.
	FieldInvoiceCollectionMethod = "invoice_collection_method"
	// FieldInvoiceLineItemResolution holds the string denoting the invoice_line_item_resolution field in the database.
	FieldInvoiceLineItemResolution = "invoice_line_item_resolution"
	// FieldInvoiceLineItemPerSubject holds the string denoting the invoice_line_item_per_subject field in the database.
	FieldInvoiceLineItemPerSubject = "invoice_line_item_per_subject"
	// Table holds the table name of the billingworkflowconfigoverride in the database.
	Table = "billing_workflow_config_overrides"
)

// Columns holds all SQL columns for billingworkflowconfigoverride fields.
var Columns = []string{
	FieldID,
	FieldNamespace,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldAlignment,
	FieldItemCollectionPeriodSeconds,
	FieldInvoiceAutoAdvance,
	FieldInvoiceDraftPeriodSeconds,
	FieldInvoiceDueAfterSeconds,
	FieldInvoiceCollectionMethod,
	FieldInvoiceLineItemResolution,
	FieldInvoiceLineItemPerSubject,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NamespaceValidator is a validator for the "namespace" field. It is called by the builders before save.
	NamespaceValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)

// AlignmentValidator is a validator for the "alignment" field enum values. It is called by the builders before save.
func AlignmentValidator(a billing.AlignmentKind) error {
	switch a {
	case "subscription":
		return nil
	default:
		return fmt.Errorf("billingworkflowconfigoverride: invalid enum value for alignment field: %q", a)
	}
}

// InvoiceCollectionMethodValidator is a validator for the "invoice_collection_method" field enum values. It is called by the builders before save.
func InvoiceCollectionMethodValidator(icm billing.CollectionMethod) error {
	switch icm {
	case "charge_automatically", "send_invoice":
		return nil
	default:
		return fmt.Errorf("billingworkflowconfigoverride: invalid enum value for invoice_collection_method field: %q", icm)
	}
}

// InvoiceLineItemResolutionValidator is a validator for the "invoice_line_item_resolution" field enum values. It is called by the builders before save.
func InvoiceLineItemResolutionValidator(ilir billing.GranualityResolution) error {
	switch ilir {
	case "day", "period":
		return nil
	default:
		return fmt.Errorf("billingworkflowconfigoverride: invalid enum value for invoice_line_item_resolution field: %q", ilir)
	}
}

// OrderOption defines the ordering options for the BillingWorkflowConfigOverride queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByNamespace orders the results by the namespace field.
func ByNamespace(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNamespace, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByAlignment orders the results by the alignment field.
func ByAlignment(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlignment, opts...).ToFunc()
}

// ByItemCollectionPeriodSeconds orders the results by the item_collection_period_seconds field.
func ByItemCollectionPeriodSeconds(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldItemCollectionPeriodSeconds, opts...).ToFunc()
}

// ByInvoiceAutoAdvance orders the results by the invoice_auto_advance field.
func ByInvoiceAutoAdvance(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvoiceAutoAdvance, opts...).ToFunc()
}

// ByInvoiceDraftPeriodSeconds orders the results by the invoice_draft_period_seconds field.
func ByInvoiceDraftPeriodSeconds(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvoiceDraftPeriodSeconds, opts...).ToFunc()
}

// ByInvoiceDueAfterSeconds orders the results by the invoice_due_after_seconds field.
func ByInvoiceDueAfterSeconds(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvoiceDueAfterSeconds, opts...).ToFunc()
}

// ByInvoiceCollectionMethod orders the results by the invoice_collection_method field.
func ByInvoiceCollectionMethod(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvoiceCollectionMethod, opts...).ToFunc()
}

// ByInvoiceLineItemResolution orders the results by the invoice_line_item_resolution field.
func ByInvoiceLineItemResolution(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvoiceLineItemResolution, opts...).ToFunc()
}

// ByInvoiceLineItemPerSubject orders the results by the invoice_line_item_per_subject field.
func ByInvoiceLineItemPerSubject(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvoiceLineItemPerSubject, opts...).ToFunc()
}
