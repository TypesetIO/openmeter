// Code generated by ent, DO NOT EDIT.

package billingworkflowconfigoverride

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/openmeterio/openmeter/openmeter/billing"
	"github.com/openmeterio/openmeter/openmeter/ent/db/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldContainsFold(FieldID, id))
}

// Namespace applies equality check predicate on the "namespace" field. It's identical to NamespaceEQ.
func Namespace(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldNamespace, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldDeletedAt, v))
}

// ItemCollectionPeriodSeconds applies equality check predicate on the "item_collection_period_seconds" field. It's identical to ItemCollectionPeriodSecondsEQ.
func ItemCollectionPeriodSeconds(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldItemCollectionPeriodSeconds, v))
}

// InvoiceAutoAdvance applies equality check predicate on the "invoice_auto_advance" field. It's identical to InvoiceAutoAdvanceEQ.
func InvoiceAutoAdvance(v bool) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceAutoAdvance, v))
}

// InvoiceDraftPeriodSeconds applies equality check predicate on the "invoice_draft_period_seconds" field. It's identical to InvoiceDraftPeriodSecondsEQ.
func InvoiceDraftPeriodSeconds(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceDraftPeriodSeconds, v))
}

// InvoiceDueAfterSeconds applies equality check predicate on the "invoice_due_after_seconds" field. It's identical to InvoiceDueAfterSecondsEQ.
func InvoiceDueAfterSeconds(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceDueAfterSeconds, v))
}

// InvoiceLineItemPerSubject applies equality check predicate on the "invoice_line_item_per_subject" field. It's identical to InvoiceLineItemPerSubjectEQ.
func InvoiceLineItemPerSubject(v bool) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceLineItemPerSubject, v))
}

// NamespaceEQ applies the EQ predicate on the "namespace" field.
func NamespaceEQ(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldNamespace, v))
}

// NamespaceNEQ applies the NEQ predicate on the "namespace" field.
func NamespaceNEQ(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldNamespace, v))
}

// NamespaceIn applies the In predicate on the "namespace" field.
func NamespaceIn(vs ...string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldNamespace, vs...))
}

// NamespaceNotIn applies the NotIn predicate on the "namespace" field.
func NamespaceNotIn(vs ...string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldNamespace, vs...))
}

// NamespaceGT applies the GT predicate on the "namespace" field.
func NamespaceGT(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldNamespace, v))
}

// NamespaceGTE applies the GTE predicate on the "namespace" field.
func NamespaceGTE(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldNamespace, v))
}

// NamespaceLT applies the LT predicate on the "namespace" field.
func NamespaceLT(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldNamespace, v))
}

// NamespaceLTE applies the LTE predicate on the "namespace" field.
func NamespaceLTE(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldNamespace, v))
}

// NamespaceContains applies the Contains predicate on the "namespace" field.
func NamespaceContains(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldContains(FieldNamespace, v))
}

// NamespaceHasPrefix applies the HasPrefix predicate on the "namespace" field.
func NamespaceHasPrefix(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldHasPrefix(FieldNamespace, v))
}

// NamespaceHasSuffix applies the HasSuffix predicate on the "namespace" field.
func NamespaceHasSuffix(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldHasSuffix(FieldNamespace, v))
}

// NamespaceEqualFold applies the EqualFold predicate on the "namespace" field.
func NamespaceEqualFold(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEqualFold(FieldNamespace, v))
}

// NamespaceContainsFold applies the ContainsFold predicate on the "namespace" field.
func NamespaceContainsFold(v string) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldContainsFold(FieldNamespace, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldDeletedAt))
}

// AlignmentEQ applies the EQ predicate on the "alignment" field.
func AlignmentEQ(v billing.AlignmentKind) predicate.BillingWorkflowConfigOverride {
	vc := v
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldAlignment, vc))
}

// AlignmentNEQ applies the NEQ predicate on the "alignment" field.
func AlignmentNEQ(v billing.AlignmentKind) predicate.BillingWorkflowConfigOverride {
	vc := v
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldAlignment, vc))
}

// AlignmentIn applies the In predicate on the "alignment" field.
func AlignmentIn(vs ...billing.AlignmentKind) predicate.BillingWorkflowConfigOverride {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldAlignment, v...))
}

// AlignmentNotIn applies the NotIn predicate on the "alignment" field.
func AlignmentNotIn(vs ...billing.AlignmentKind) predicate.BillingWorkflowConfigOverride {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldAlignment, v...))
}

// AlignmentIsNil applies the IsNil predicate on the "alignment" field.
func AlignmentIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldAlignment))
}

// AlignmentNotNil applies the NotNil predicate on the "alignment" field.
func AlignmentNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldAlignment))
}

// ItemCollectionPeriodSecondsEQ applies the EQ predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsEQ(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldItemCollectionPeriodSeconds, v))
}

// ItemCollectionPeriodSecondsNEQ applies the NEQ predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsNEQ(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldItemCollectionPeriodSeconds, v))
}

// ItemCollectionPeriodSecondsIn applies the In predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsIn(vs ...int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldItemCollectionPeriodSeconds, vs...))
}

// ItemCollectionPeriodSecondsNotIn applies the NotIn predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsNotIn(vs ...int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldItemCollectionPeriodSeconds, vs...))
}

// ItemCollectionPeriodSecondsGT applies the GT predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsGT(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldItemCollectionPeriodSeconds, v))
}

// ItemCollectionPeriodSecondsGTE applies the GTE predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsGTE(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldItemCollectionPeriodSeconds, v))
}

// ItemCollectionPeriodSecondsLT applies the LT predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsLT(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldItemCollectionPeriodSeconds, v))
}

// ItemCollectionPeriodSecondsLTE applies the LTE predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsLTE(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldItemCollectionPeriodSeconds, v))
}

// ItemCollectionPeriodSecondsIsNil applies the IsNil predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldItemCollectionPeriodSeconds))
}

// ItemCollectionPeriodSecondsNotNil applies the NotNil predicate on the "item_collection_period_seconds" field.
func ItemCollectionPeriodSecondsNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldItemCollectionPeriodSeconds))
}

// InvoiceAutoAdvanceEQ applies the EQ predicate on the "invoice_auto_advance" field.
func InvoiceAutoAdvanceEQ(v bool) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceAutoAdvance, v))
}

// InvoiceAutoAdvanceNEQ applies the NEQ predicate on the "invoice_auto_advance" field.
func InvoiceAutoAdvanceNEQ(v bool) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldInvoiceAutoAdvance, v))
}

// InvoiceAutoAdvanceIsNil applies the IsNil predicate on the "invoice_auto_advance" field.
func InvoiceAutoAdvanceIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldInvoiceAutoAdvance))
}

// InvoiceAutoAdvanceNotNil applies the NotNil predicate on the "invoice_auto_advance" field.
func InvoiceAutoAdvanceNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldInvoiceAutoAdvance))
}

// InvoiceDraftPeriodSecondsEQ applies the EQ predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsEQ(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceDraftPeriodSeconds, v))
}

// InvoiceDraftPeriodSecondsNEQ applies the NEQ predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsNEQ(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldInvoiceDraftPeriodSeconds, v))
}

// InvoiceDraftPeriodSecondsIn applies the In predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsIn(vs ...int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldInvoiceDraftPeriodSeconds, vs...))
}

// InvoiceDraftPeriodSecondsNotIn applies the NotIn predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsNotIn(vs ...int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldInvoiceDraftPeriodSeconds, vs...))
}

// InvoiceDraftPeriodSecondsGT applies the GT predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsGT(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldInvoiceDraftPeriodSeconds, v))
}

// InvoiceDraftPeriodSecondsGTE applies the GTE predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsGTE(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldInvoiceDraftPeriodSeconds, v))
}

// InvoiceDraftPeriodSecondsLT applies the LT predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsLT(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldInvoiceDraftPeriodSeconds, v))
}

// InvoiceDraftPeriodSecondsLTE applies the LTE predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsLTE(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldInvoiceDraftPeriodSeconds, v))
}

// InvoiceDraftPeriodSecondsIsNil applies the IsNil predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldInvoiceDraftPeriodSeconds))
}

// InvoiceDraftPeriodSecondsNotNil applies the NotNil predicate on the "invoice_draft_period_seconds" field.
func InvoiceDraftPeriodSecondsNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldInvoiceDraftPeriodSeconds))
}

// InvoiceDueAfterSecondsEQ applies the EQ predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsEQ(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceDueAfterSeconds, v))
}

// InvoiceDueAfterSecondsNEQ applies the NEQ predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsNEQ(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldInvoiceDueAfterSeconds, v))
}

// InvoiceDueAfterSecondsIn applies the In predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsIn(vs ...int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldInvoiceDueAfterSeconds, vs...))
}

// InvoiceDueAfterSecondsNotIn applies the NotIn predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsNotIn(vs ...int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldInvoiceDueAfterSeconds, vs...))
}

// InvoiceDueAfterSecondsGT applies the GT predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsGT(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGT(FieldInvoiceDueAfterSeconds, v))
}

// InvoiceDueAfterSecondsGTE applies the GTE predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsGTE(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldGTE(FieldInvoiceDueAfterSeconds, v))
}

// InvoiceDueAfterSecondsLT applies the LT predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsLT(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLT(FieldInvoiceDueAfterSeconds, v))
}

// InvoiceDueAfterSecondsLTE applies the LTE predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsLTE(v int64) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldLTE(FieldInvoiceDueAfterSeconds, v))
}

// InvoiceDueAfterSecondsIsNil applies the IsNil predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldInvoiceDueAfterSeconds))
}

// InvoiceDueAfterSecondsNotNil applies the NotNil predicate on the "invoice_due_after_seconds" field.
func InvoiceDueAfterSecondsNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldInvoiceDueAfterSeconds))
}

// InvoiceCollectionMethodEQ applies the EQ predicate on the "invoice_collection_method" field.
func InvoiceCollectionMethodEQ(v billing.CollectionMethod) predicate.BillingWorkflowConfigOverride {
	vc := v
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceCollectionMethod, vc))
}

// InvoiceCollectionMethodNEQ applies the NEQ predicate on the "invoice_collection_method" field.
func InvoiceCollectionMethodNEQ(v billing.CollectionMethod) predicate.BillingWorkflowConfigOverride {
	vc := v
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldInvoiceCollectionMethod, vc))
}

// InvoiceCollectionMethodIn applies the In predicate on the "invoice_collection_method" field.
func InvoiceCollectionMethodIn(vs ...billing.CollectionMethod) predicate.BillingWorkflowConfigOverride {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldInvoiceCollectionMethod, v...))
}

// InvoiceCollectionMethodNotIn applies the NotIn predicate on the "invoice_collection_method" field.
func InvoiceCollectionMethodNotIn(vs ...billing.CollectionMethod) predicate.BillingWorkflowConfigOverride {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldInvoiceCollectionMethod, v...))
}

// InvoiceCollectionMethodIsNil applies the IsNil predicate on the "invoice_collection_method" field.
func InvoiceCollectionMethodIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldInvoiceCollectionMethod))
}

// InvoiceCollectionMethodNotNil applies the NotNil predicate on the "invoice_collection_method" field.
func InvoiceCollectionMethodNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldInvoiceCollectionMethod))
}

// InvoiceLineItemResolutionEQ applies the EQ predicate on the "invoice_line_item_resolution" field.
func InvoiceLineItemResolutionEQ(v billing.GranualityResolution) predicate.BillingWorkflowConfigOverride {
	vc := v
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceLineItemResolution, vc))
}

// InvoiceLineItemResolutionNEQ applies the NEQ predicate on the "invoice_line_item_resolution" field.
func InvoiceLineItemResolutionNEQ(v billing.GranualityResolution) predicate.BillingWorkflowConfigOverride {
	vc := v
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldInvoiceLineItemResolution, vc))
}

// InvoiceLineItemResolutionIn applies the In predicate on the "invoice_line_item_resolution" field.
func InvoiceLineItemResolutionIn(vs ...billing.GranualityResolution) predicate.BillingWorkflowConfigOverride {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingWorkflowConfigOverride(sql.FieldIn(FieldInvoiceLineItemResolution, v...))
}

// InvoiceLineItemResolutionNotIn applies the NotIn predicate on the "invoice_line_item_resolution" field.
func InvoiceLineItemResolutionNotIn(vs ...billing.GranualityResolution) predicate.BillingWorkflowConfigOverride {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotIn(FieldInvoiceLineItemResolution, v...))
}

// InvoiceLineItemResolutionIsNil applies the IsNil predicate on the "invoice_line_item_resolution" field.
func InvoiceLineItemResolutionIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldInvoiceLineItemResolution))
}

// InvoiceLineItemResolutionNotNil applies the NotNil predicate on the "invoice_line_item_resolution" field.
func InvoiceLineItemResolutionNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldInvoiceLineItemResolution))
}

// InvoiceLineItemPerSubjectEQ applies the EQ predicate on the "invoice_line_item_per_subject" field.
func InvoiceLineItemPerSubjectEQ(v bool) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldEQ(FieldInvoiceLineItemPerSubject, v))
}

// InvoiceLineItemPerSubjectNEQ applies the NEQ predicate on the "invoice_line_item_per_subject" field.
func InvoiceLineItemPerSubjectNEQ(v bool) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNEQ(FieldInvoiceLineItemPerSubject, v))
}

// InvoiceLineItemPerSubjectIsNil applies the IsNil predicate on the "invoice_line_item_per_subject" field.
func InvoiceLineItemPerSubjectIsNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldIsNull(FieldInvoiceLineItemPerSubject))
}

// InvoiceLineItemPerSubjectNotNil applies the NotNil predicate on the "invoice_line_item_per_subject" field.
func InvoiceLineItemPerSubjectNotNil() predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.FieldNotNull(FieldInvoiceLineItemPerSubject))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.BillingWorkflowConfigOverride) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.BillingWorkflowConfigOverride) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.BillingWorkflowConfigOverride) predicate.BillingWorkflowConfigOverride {
	return predicate.BillingWorkflowConfigOverride(sql.NotPredicates(p))
}
