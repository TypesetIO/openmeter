// Code generated by ent, DO NOT EDIT.

package db

import (
	"context"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billingworkflowconfigoverride"
	"github.com/openmeterio/openmeter/openmeter/ent/db/predicate"
)

// BillingWorkflowConfigOverrideDelete is the builder for deleting a BillingWorkflowConfigOverride entity.
type BillingWorkflowConfigOverrideDelete struct {
	config
	hooks    []Hook
	mutation *BillingWorkflowConfigOverrideMutation
}

// Where appends a list predicates to the BillingWorkflowConfigOverrideDelete builder.
func (bwcod *BillingWorkflowConfigOverrideDelete) Where(ps ...predicate.BillingWorkflowConfigOverride) *BillingWorkflowConfigOverrideDelete {
	bwcod.mutation.Where(ps...)
	return bwcod
}

// Exec executes the deletion query and returns how many vertices were deleted.
func (bwcod *BillingWorkflowConfigOverrideDelete) Exec(ctx context.Context) (int, error) {
	return withHooks(ctx, bwcod.sqlExec, bwcod.mutation, bwcod.hooks)
}

// ExecX is like Exec, but panics if an error occurs.
func (bwcod *BillingWorkflowConfigOverrideDelete) ExecX(ctx context.Context) int {
	n, err := bwcod.Exec(ctx)
	if err != nil {
		panic(err)
	}
	return n
}

func (bwcod *BillingWorkflowConfigOverrideDelete) sqlExec(ctx context.Context) (int, error) {
	_spec := sqlgraph.NewDeleteSpec(billingworkflowconfigoverride.Table, sqlgraph.NewFieldSpec(billingworkflowconfigoverride.FieldID, field.TypeString))
	if ps := bwcod.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	affected, err := sqlgraph.DeleteNodes(ctx, bwcod.driver, _spec)
	if err != nil && sqlgraph.IsConstraintError(err) {
		err = &ConstraintError{msg: err.Error(), wrap: err}
	}
	bwcod.mutation.done = true
	return affected, err
}

// BillingWorkflowConfigOverrideDeleteOne is the builder for deleting a single BillingWorkflowConfigOverride entity.
type BillingWorkflowConfigOverrideDeleteOne struct {
	bwcod *BillingWorkflowConfigOverrideDelete
}

// Where appends a list predicates to the BillingWorkflowConfigOverrideDelete builder.
func (bwcodo *BillingWorkflowConfigOverrideDeleteOne) Where(ps ...predicate.BillingWorkflowConfigOverride) *BillingWorkflowConfigOverrideDeleteOne {
	bwcodo.bwcod.mutation.Where(ps...)
	return bwcodo
}

// Exec executes the deletion query.
func (bwcodo *BillingWorkflowConfigOverrideDeleteOne) Exec(ctx context.Context) error {
	n, err := bwcodo.bwcod.Exec(ctx)
	switch {
	case err != nil:
		return err
	case n == 0:
		return &NotFoundError{billingworkflowconfigoverride.Label}
	default:
		return nil
	}
}

// ExecX is like Exec, but panics if an error occurs.
func (bwcodo *BillingWorkflowConfigOverrideDeleteOne) ExecX(ctx context.Context) {
	if err := bwcodo.Exec(ctx); err != nil {
		panic(err)
	}
}
