// Code generated by ent, DO NOT EDIT.

package db

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/openmeterio/openmeter/openmeter/billing"
	"github.com/openmeterio/openmeter/openmeter/ent/db/billingworkflowconfigoverride"
	"github.com/openmeterio/openmeter/openmeter/ent/db/predicate"
)

// BillingWorkflowConfigOverrideUpdate is the builder for updating BillingWorkflowConfigOverride entities.
type BillingWorkflowConfigOverrideUpdate struct {
	config
	hooks    []Hook
	mutation *BillingWorkflowConfigOverrideMutation
}

// Where appends a list predicates to the BillingWorkflowConfigOverrideUpdate builder.
func (bwcou *BillingWorkflowConfigOverrideUpdate) Where(ps ...predicate.BillingWorkflowConfigOverride) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.Where(ps...)
	return bwcou
}

// SetUpdatedAt sets the "updated_at" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetUpdatedAt(t time.Time) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.SetUpdatedAt(t)
	return bwcou
}

// SetDeletedAt sets the "deleted_at" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetDeletedAt(t time.Time) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.SetDeletedAt(t)
	return bwcou
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableDeletedAt(t *time.Time) *BillingWorkflowConfigOverrideUpdate {
	if t != nil {
		bwcou.SetDeletedAt(*t)
	}
	return bwcou
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearDeletedAt() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearDeletedAt()
	return bwcou
}

// SetAlignment sets the "alignment" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetAlignment(bk billing.AlignmentKind) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.SetAlignment(bk)
	return bwcou
}

// SetNillableAlignment sets the "alignment" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableAlignment(bk *billing.AlignmentKind) *BillingWorkflowConfigOverrideUpdate {
	if bk != nil {
		bwcou.SetAlignment(*bk)
	}
	return bwcou
}

// ClearAlignment clears the value of the "alignment" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearAlignment() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearAlignment()
	return bwcou
}

// SetItemCollectionPeriodSeconds sets the "item_collection_period_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetItemCollectionPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ResetItemCollectionPeriodSeconds()
	bwcou.mutation.SetItemCollectionPeriodSeconds(i)
	return bwcou
}

// SetNillableItemCollectionPeriodSeconds sets the "item_collection_period_seconds" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableItemCollectionPeriodSeconds(i *int64) *BillingWorkflowConfigOverrideUpdate {
	if i != nil {
		bwcou.SetItemCollectionPeriodSeconds(*i)
	}
	return bwcou
}

// AddItemCollectionPeriodSeconds adds i to the "item_collection_period_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) AddItemCollectionPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.AddItemCollectionPeriodSeconds(i)
	return bwcou
}

// ClearItemCollectionPeriodSeconds clears the value of the "item_collection_period_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearItemCollectionPeriodSeconds() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearItemCollectionPeriodSeconds()
	return bwcou
}

// SetInvoiceAutoAdvance sets the "invoice_auto_advance" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetInvoiceAutoAdvance(b bool) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.SetInvoiceAutoAdvance(b)
	return bwcou
}

// SetNillableInvoiceAutoAdvance sets the "invoice_auto_advance" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableInvoiceAutoAdvance(b *bool) *BillingWorkflowConfigOverrideUpdate {
	if b != nil {
		bwcou.SetInvoiceAutoAdvance(*b)
	}
	return bwcou
}

// ClearInvoiceAutoAdvance clears the value of the "invoice_auto_advance" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearInvoiceAutoAdvance() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearInvoiceAutoAdvance()
	return bwcou
}

// SetInvoiceDraftPeriodSeconds sets the "invoice_draft_period_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetInvoiceDraftPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ResetInvoiceDraftPeriodSeconds()
	bwcou.mutation.SetInvoiceDraftPeriodSeconds(i)
	return bwcou
}

// SetNillableInvoiceDraftPeriodSeconds sets the "invoice_draft_period_seconds" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableInvoiceDraftPeriodSeconds(i *int64) *BillingWorkflowConfigOverrideUpdate {
	if i != nil {
		bwcou.SetInvoiceDraftPeriodSeconds(*i)
	}
	return bwcou
}

// AddInvoiceDraftPeriodSeconds adds i to the "invoice_draft_period_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) AddInvoiceDraftPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.AddInvoiceDraftPeriodSeconds(i)
	return bwcou
}

// ClearInvoiceDraftPeriodSeconds clears the value of the "invoice_draft_period_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearInvoiceDraftPeriodSeconds() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearInvoiceDraftPeriodSeconds()
	return bwcou
}

// SetInvoiceDueAfterSeconds sets the "invoice_due_after_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetInvoiceDueAfterSeconds(i int64) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ResetInvoiceDueAfterSeconds()
	bwcou.mutation.SetInvoiceDueAfterSeconds(i)
	return bwcou
}

// SetNillableInvoiceDueAfterSeconds sets the "invoice_due_after_seconds" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableInvoiceDueAfterSeconds(i *int64) *BillingWorkflowConfigOverrideUpdate {
	if i != nil {
		bwcou.SetInvoiceDueAfterSeconds(*i)
	}
	return bwcou
}

// AddInvoiceDueAfterSeconds adds i to the "invoice_due_after_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) AddInvoiceDueAfterSeconds(i int64) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.AddInvoiceDueAfterSeconds(i)
	return bwcou
}

// ClearInvoiceDueAfterSeconds clears the value of the "invoice_due_after_seconds" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearInvoiceDueAfterSeconds() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearInvoiceDueAfterSeconds()
	return bwcou
}

// SetInvoiceCollectionMethod sets the "invoice_collection_method" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetInvoiceCollectionMethod(bm billing.CollectionMethod) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.SetInvoiceCollectionMethod(bm)
	return bwcou
}

// SetNillableInvoiceCollectionMethod sets the "invoice_collection_method" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableInvoiceCollectionMethod(bm *billing.CollectionMethod) *BillingWorkflowConfigOverrideUpdate {
	if bm != nil {
		bwcou.SetInvoiceCollectionMethod(*bm)
	}
	return bwcou
}

// ClearInvoiceCollectionMethod clears the value of the "invoice_collection_method" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearInvoiceCollectionMethod() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearInvoiceCollectionMethod()
	return bwcou
}

// SetInvoiceLineItemResolution sets the "invoice_line_item_resolution" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetInvoiceLineItemResolution(br billing.GranualityResolution) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.SetInvoiceLineItemResolution(br)
	return bwcou
}

// SetNillableInvoiceLineItemResolution sets the "invoice_line_item_resolution" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableInvoiceLineItemResolution(br *billing.GranualityResolution) *BillingWorkflowConfigOverrideUpdate {
	if br != nil {
		bwcou.SetInvoiceLineItemResolution(*br)
	}
	return bwcou
}

// ClearInvoiceLineItemResolution clears the value of the "invoice_line_item_resolution" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearInvoiceLineItemResolution() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearInvoiceLineItemResolution()
	return bwcou
}

// SetInvoiceLineItemPerSubject sets the "invoice_line_item_per_subject" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetInvoiceLineItemPerSubject(b bool) *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.SetInvoiceLineItemPerSubject(b)
	return bwcou
}

// SetNillableInvoiceLineItemPerSubject sets the "invoice_line_item_per_subject" field if the given value is not nil.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SetNillableInvoiceLineItemPerSubject(b *bool) *BillingWorkflowConfigOverrideUpdate {
	if b != nil {
		bwcou.SetInvoiceLineItemPerSubject(*b)
	}
	return bwcou
}

// ClearInvoiceLineItemPerSubject clears the value of the "invoice_line_item_per_subject" field.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ClearInvoiceLineItemPerSubject() *BillingWorkflowConfigOverrideUpdate {
	bwcou.mutation.ClearInvoiceLineItemPerSubject()
	return bwcou
}

// Mutation returns the BillingWorkflowConfigOverrideMutation object of the builder.
func (bwcou *BillingWorkflowConfigOverrideUpdate) Mutation() *BillingWorkflowConfigOverrideMutation {
	return bwcou.mutation
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (bwcou *BillingWorkflowConfigOverrideUpdate) Save(ctx context.Context) (int, error) {
	bwcou.defaults()
	return withHooks(ctx, bwcou.sqlSave, bwcou.mutation, bwcou.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (bwcou *BillingWorkflowConfigOverrideUpdate) SaveX(ctx context.Context) int {
	affected, err := bwcou.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (bwcou *BillingWorkflowConfigOverrideUpdate) Exec(ctx context.Context) error {
	_, err := bwcou.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (bwcou *BillingWorkflowConfigOverrideUpdate) ExecX(ctx context.Context) {
	if err := bwcou.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (bwcou *BillingWorkflowConfigOverrideUpdate) defaults() {
	if _, ok := bwcou.mutation.UpdatedAt(); !ok {
		v := billingworkflowconfigoverride.UpdateDefaultUpdatedAt()
		bwcou.mutation.SetUpdatedAt(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (bwcou *BillingWorkflowConfigOverrideUpdate) check() error {
	if v, ok := bwcou.mutation.Alignment(); ok {
		if err := billingworkflowconfigoverride.AlignmentValidator(v); err != nil {
			return &ValidationError{Name: "alignment", err: fmt.Errorf(`db: validator failed for field "BillingWorkflowConfigOverride.alignment": %w`, err)}
		}
	}
	if v, ok := bwcou.mutation.InvoiceCollectionMethod(); ok {
		if err := billingworkflowconfigoverride.InvoiceCollectionMethodValidator(v); err != nil {
			return &ValidationError{Name: "invoice_collection_method", err: fmt.Errorf(`db: validator failed for field "BillingWorkflowConfigOverride.invoice_collection_method": %w`, err)}
		}
	}
	if v, ok := bwcou.mutation.InvoiceLineItemResolution(); ok {
		if err := billingworkflowconfigoverride.InvoiceLineItemResolutionValidator(v); err != nil {
			return &ValidationError{Name: "invoice_line_item_resolution", err: fmt.Errorf(`db: validator failed for field "BillingWorkflowConfigOverride.invoice_line_item_resolution": %w`, err)}
		}
	}
	return nil
}

func (bwcou *BillingWorkflowConfigOverrideUpdate) sqlSave(ctx context.Context) (n int, err error) {
	if err := bwcou.check(); err != nil {
		return n, err
	}
	_spec := sqlgraph.NewUpdateSpec(billingworkflowconfigoverride.Table, billingworkflowconfigoverride.Columns, sqlgraph.NewFieldSpec(billingworkflowconfigoverride.FieldID, field.TypeString))
	if ps := bwcou.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := bwcou.mutation.UpdatedAt(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldUpdatedAt, field.TypeTime, value)
	}
	if value, ok := bwcou.mutation.DeletedAt(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldDeletedAt, field.TypeTime, value)
	}
	if bwcou.mutation.DeletedAtCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldDeletedAt, field.TypeTime)
	}
	if value, ok := bwcou.mutation.Alignment(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldAlignment, field.TypeEnum, value)
	}
	if bwcou.mutation.AlignmentCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldAlignment, field.TypeEnum)
	}
	if value, ok := bwcou.mutation.ItemCollectionPeriodSeconds(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldItemCollectionPeriodSeconds, field.TypeInt64, value)
	}
	if value, ok := bwcou.mutation.AddedItemCollectionPeriodSeconds(); ok {
		_spec.AddField(billingworkflowconfigoverride.FieldItemCollectionPeriodSeconds, field.TypeInt64, value)
	}
	if bwcou.mutation.ItemCollectionPeriodSecondsCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldItemCollectionPeriodSeconds, field.TypeInt64)
	}
	if value, ok := bwcou.mutation.InvoiceAutoAdvance(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceAutoAdvance, field.TypeBool, value)
	}
	if bwcou.mutation.InvoiceAutoAdvanceCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceAutoAdvance, field.TypeBool)
	}
	if value, ok := bwcou.mutation.InvoiceDraftPeriodSeconds(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceDraftPeriodSeconds, field.TypeInt64, value)
	}
	if value, ok := bwcou.mutation.AddedInvoiceDraftPeriodSeconds(); ok {
		_spec.AddField(billingworkflowconfigoverride.FieldInvoiceDraftPeriodSeconds, field.TypeInt64, value)
	}
	if bwcou.mutation.InvoiceDraftPeriodSecondsCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceDraftPeriodSeconds, field.TypeInt64)
	}
	if value, ok := bwcou.mutation.InvoiceDueAfterSeconds(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceDueAfterSeconds, field.TypeInt64, value)
	}
	if value, ok := bwcou.mutation.AddedInvoiceDueAfterSeconds(); ok {
		_spec.AddField(billingworkflowconfigoverride.FieldInvoiceDueAfterSeconds, field.TypeInt64, value)
	}
	if bwcou.mutation.InvoiceDueAfterSecondsCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceDueAfterSeconds, field.TypeInt64)
	}
	if value, ok := bwcou.mutation.InvoiceCollectionMethod(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceCollectionMethod, field.TypeEnum, value)
	}
	if bwcou.mutation.InvoiceCollectionMethodCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceCollectionMethod, field.TypeEnum)
	}
	if value, ok := bwcou.mutation.InvoiceLineItemResolution(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceLineItemResolution, field.TypeEnum, value)
	}
	if bwcou.mutation.InvoiceLineItemResolutionCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceLineItemResolution, field.TypeEnum)
	}
	if value, ok := bwcou.mutation.InvoiceLineItemPerSubject(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceLineItemPerSubject, field.TypeBool, value)
	}
	if bwcou.mutation.InvoiceLineItemPerSubjectCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceLineItemPerSubject, field.TypeBool)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, bwcou.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{billingworkflowconfigoverride.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	bwcou.mutation.done = true
	return n, nil
}

// BillingWorkflowConfigOverrideUpdateOne is the builder for updating a single BillingWorkflowConfigOverride entity.
type BillingWorkflowConfigOverrideUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *BillingWorkflowConfigOverrideMutation
}

// SetUpdatedAt sets the "updated_at" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetUpdatedAt(t time.Time) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.SetUpdatedAt(t)
	return bwcouo
}

// SetDeletedAt sets the "deleted_at" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetDeletedAt(t time.Time) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.SetDeletedAt(t)
	return bwcouo
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableDeletedAt(t *time.Time) *BillingWorkflowConfigOverrideUpdateOne {
	if t != nil {
		bwcouo.SetDeletedAt(*t)
	}
	return bwcouo
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearDeletedAt() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearDeletedAt()
	return bwcouo
}

// SetAlignment sets the "alignment" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetAlignment(bk billing.AlignmentKind) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.SetAlignment(bk)
	return bwcouo
}

// SetNillableAlignment sets the "alignment" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableAlignment(bk *billing.AlignmentKind) *BillingWorkflowConfigOverrideUpdateOne {
	if bk != nil {
		bwcouo.SetAlignment(*bk)
	}
	return bwcouo
}

// ClearAlignment clears the value of the "alignment" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearAlignment() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearAlignment()
	return bwcouo
}

// SetItemCollectionPeriodSeconds sets the "item_collection_period_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetItemCollectionPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ResetItemCollectionPeriodSeconds()
	bwcouo.mutation.SetItemCollectionPeriodSeconds(i)
	return bwcouo
}

// SetNillableItemCollectionPeriodSeconds sets the "item_collection_period_seconds" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableItemCollectionPeriodSeconds(i *int64) *BillingWorkflowConfigOverrideUpdateOne {
	if i != nil {
		bwcouo.SetItemCollectionPeriodSeconds(*i)
	}
	return bwcouo
}

// AddItemCollectionPeriodSeconds adds i to the "item_collection_period_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) AddItemCollectionPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.AddItemCollectionPeriodSeconds(i)
	return bwcouo
}

// ClearItemCollectionPeriodSeconds clears the value of the "item_collection_period_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearItemCollectionPeriodSeconds() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearItemCollectionPeriodSeconds()
	return bwcouo
}

// SetInvoiceAutoAdvance sets the "invoice_auto_advance" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetInvoiceAutoAdvance(b bool) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.SetInvoiceAutoAdvance(b)
	return bwcouo
}

// SetNillableInvoiceAutoAdvance sets the "invoice_auto_advance" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableInvoiceAutoAdvance(b *bool) *BillingWorkflowConfigOverrideUpdateOne {
	if b != nil {
		bwcouo.SetInvoiceAutoAdvance(*b)
	}
	return bwcouo
}

// ClearInvoiceAutoAdvance clears the value of the "invoice_auto_advance" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearInvoiceAutoAdvance() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearInvoiceAutoAdvance()
	return bwcouo
}

// SetInvoiceDraftPeriodSeconds sets the "invoice_draft_period_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetInvoiceDraftPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ResetInvoiceDraftPeriodSeconds()
	bwcouo.mutation.SetInvoiceDraftPeriodSeconds(i)
	return bwcouo
}

// SetNillableInvoiceDraftPeriodSeconds sets the "invoice_draft_period_seconds" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableInvoiceDraftPeriodSeconds(i *int64) *BillingWorkflowConfigOverrideUpdateOne {
	if i != nil {
		bwcouo.SetInvoiceDraftPeriodSeconds(*i)
	}
	return bwcouo
}

// AddInvoiceDraftPeriodSeconds adds i to the "invoice_draft_period_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) AddInvoiceDraftPeriodSeconds(i int64) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.AddInvoiceDraftPeriodSeconds(i)
	return bwcouo
}

// ClearInvoiceDraftPeriodSeconds clears the value of the "invoice_draft_period_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearInvoiceDraftPeriodSeconds() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearInvoiceDraftPeriodSeconds()
	return bwcouo
}

// SetInvoiceDueAfterSeconds sets the "invoice_due_after_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetInvoiceDueAfterSeconds(i int64) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ResetInvoiceDueAfterSeconds()
	bwcouo.mutation.SetInvoiceDueAfterSeconds(i)
	return bwcouo
}

// SetNillableInvoiceDueAfterSeconds sets the "invoice_due_after_seconds" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableInvoiceDueAfterSeconds(i *int64) *BillingWorkflowConfigOverrideUpdateOne {
	if i != nil {
		bwcouo.SetInvoiceDueAfterSeconds(*i)
	}
	return bwcouo
}

// AddInvoiceDueAfterSeconds adds i to the "invoice_due_after_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) AddInvoiceDueAfterSeconds(i int64) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.AddInvoiceDueAfterSeconds(i)
	return bwcouo
}

// ClearInvoiceDueAfterSeconds clears the value of the "invoice_due_after_seconds" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearInvoiceDueAfterSeconds() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearInvoiceDueAfterSeconds()
	return bwcouo
}

// SetInvoiceCollectionMethod sets the "invoice_collection_method" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetInvoiceCollectionMethod(bm billing.CollectionMethod) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.SetInvoiceCollectionMethod(bm)
	return bwcouo
}

// SetNillableInvoiceCollectionMethod sets the "invoice_collection_method" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableInvoiceCollectionMethod(bm *billing.CollectionMethod) *BillingWorkflowConfigOverrideUpdateOne {
	if bm != nil {
		bwcouo.SetInvoiceCollectionMethod(*bm)
	}
	return bwcouo
}

// ClearInvoiceCollectionMethod clears the value of the "invoice_collection_method" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearInvoiceCollectionMethod() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearInvoiceCollectionMethod()
	return bwcouo
}

// SetInvoiceLineItemResolution sets the "invoice_line_item_resolution" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetInvoiceLineItemResolution(br billing.GranualityResolution) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.SetInvoiceLineItemResolution(br)
	return bwcouo
}

// SetNillableInvoiceLineItemResolution sets the "invoice_line_item_resolution" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableInvoiceLineItemResolution(br *billing.GranualityResolution) *BillingWorkflowConfigOverrideUpdateOne {
	if br != nil {
		bwcouo.SetInvoiceLineItemResolution(*br)
	}
	return bwcouo
}

// ClearInvoiceLineItemResolution clears the value of the "invoice_line_item_resolution" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearInvoiceLineItemResolution() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearInvoiceLineItemResolution()
	return bwcouo
}

// SetInvoiceLineItemPerSubject sets the "invoice_line_item_per_subject" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetInvoiceLineItemPerSubject(b bool) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.SetInvoiceLineItemPerSubject(b)
	return bwcouo
}

// SetNillableInvoiceLineItemPerSubject sets the "invoice_line_item_per_subject" field if the given value is not nil.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SetNillableInvoiceLineItemPerSubject(b *bool) *BillingWorkflowConfigOverrideUpdateOne {
	if b != nil {
		bwcouo.SetInvoiceLineItemPerSubject(*b)
	}
	return bwcouo
}

// ClearInvoiceLineItemPerSubject clears the value of the "invoice_line_item_per_subject" field.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ClearInvoiceLineItemPerSubject() *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.ClearInvoiceLineItemPerSubject()
	return bwcouo
}

// Mutation returns the BillingWorkflowConfigOverrideMutation object of the builder.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) Mutation() *BillingWorkflowConfigOverrideMutation {
	return bwcouo.mutation
}

// Where appends a list predicates to the BillingWorkflowConfigOverrideUpdate builder.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) Where(ps ...predicate.BillingWorkflowConfigOverride) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.mutation.Where(ps...)
	return bwcouo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) Select(field string, fields ...string) *BillingWorkflowConfigOverrideUpdateOne {
	bwcouo.fields = append([]string{field}, fields...)
	return bwcouo
}

// Save executes the query and returns the updated BillingWorkflowConfigOverride entity.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) Save(ctx context.Context) (*BillingWorkflowConfigOverride, error) {
	bwcouo.defaults()
	return withHooks(ctx, bwcouo.sqlSave, bwcouo.mutation, bwcouo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) SaveX(ctx context.Context) *BillingWorkflowConfigOverride {
	node, err := bwcouo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) Exec(ctx context.Context) error {
	_, err := bwcouo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) ExecX(ctx context.Context) {
	if err := bwcouo.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) defaults() {
	if _, ok := bwcouo.mutation.UpdatedAt(); !ok {
		v := billingworkflowconfigoverride.UpdateDefaultUpdatedAt()
		bwcouo.mutation.SetUpdatedAt(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) check() error {
	if v, ok := bwcouo.mutation.Alignment(); ok {
		if err := billingworkflowconfigoverride.AlignmentValidator(v); err != nil {
			return &ValidationError{Name: "alignment", err: fmt.Errorf(`db: validator failed for field "BillingWorkflowConfigOverride.alignment": %w`, err)}
		}
	}
	if v, ok := bwcouo.mutation.InvoiceCollectionMethod(); ok {
		if err := billingworkflowconfigoverride.InvoiceCollectionMethodValidator(v); err != nil {
			return &ValidationError{Name: "invoice_collection_method", err: fmt.Errorf(`db: validator failed for field "BillingWorkflowConfigOverride.invoice_collection_method": %w`, err)}
		}
	}
	if v, ok := bwcouo.mutation.InvoiceLineItemResolution(); ok {
		if err := billingworkflowconfigoverride.InvoiceLineItemResolutionValidator(v); err != nil {
			return &ValidationError{Name: "invoice_line_item_resolution", err: fmt.Errorf(`db: validator failed for field "BillingWorkflowConfigOverride.invoice_line_item_resolution": %w`, err)}
		}
	}
	return nil
}

func (bwcouo *BillingWorkflowConfigOverrideUpdateOne) sqlSave(ctx context.Context) (_node *BillingWorkflowConfigOverride, err error) {
	if err := bwcouo.check(); err != nil {
		return _node, err
	}
	_spec := sqlgraph.NewUpdateSpec(billingworkflowconfigoverride.Table, billingworkflowconfigoverride.Columns, sqlgraph.NewFieldSpec(billingworkflowconfigoverride.FieldID, field.TypeString))
	id, ok := bwcouo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`db: missing "BillingWorkflowConfigOverride.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := bwcouo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, billingworkflowconfigoverride.FieldID)
		for _, f := range fields {
			if !billingworkflowconfigoverride.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("db: invalid field %q for query", f)}
			}
			if f != billingworkflowconfigoverride.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := bwcouo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := bwcouo.mutation.UpdatedAt(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldUpdatedAt, field.TypeTime, value)
	}
	if value, ok := bwcouo.mutation.DeletedAt(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldDeletedAt, field.TypeTime, value)
	}
	if bwcouo.mutation.DeletedAtCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldDeletedAt, field.TypeTime)
	}
	if value, ok := bwcouo.mutation.Alignment(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldAlignment, field.TypeEnum, value)
	}
	if bwcouo.mutation.AlignmentCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldAlignment, field.TypeEnum)
	}
	if value, ok := bwcouo.mutation.ItemCollectionPeriodSeconds(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldItemCollectionPeriodSeconds, field.TypeInt64, value)
	}
	if value, ok := bwcouo.mutation.AddedItemCollectionPeriodSeconds(); ok {
		_spec.AddField(billingworkflowconfigoverride.FieldItemCollectionPeriodSeconds, field.TypeInt64, value)
	}
	if bwcouo.mutation.ItemCollectionPeriodSecondsCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldItemCollectionPeriodSeconds, field.TypeInt64)
	}
	if value, ok := bwcouo.mutation.InvoiceAutoAdvance(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceAutoAdvance, field.TypeBool, value)
	}
	if bwcouo.mutation.InvoiceAutoAdvanceCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceAutoAdvance, field.TypeBool)
	}
	if value, ok := bwcouo.mutation.InvoiceDraftPeriodSeconds(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceDraftPeriodSeconds, field.TypeInt64, value)
	}
	if value, ok := bwcouo.mutation.AddedInvoiceDraftPeriodSeconds(); ok {
		_spec.AddField(billingworkflowconfigoverride.FieldInvoiceDraftPeriodSeconds, field.TypeInt64, value)
	}
	if bwcouo.mutation.InvoiceDraftPeriodSecondsCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceDraftPeriodSeconds, field.TypeInt64)
	}
	if value, ok := bwcouo.mutation.InvoiceDueAfterSeconds(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceDueAfterSeconds, field.TypeInt64, value)
	}
	if value, ok := bwcouo.mutation.AddedInvoiceDueAfterSeconds(); ok {
		_spec.AddField(billingworkflowconfigoverride.FieldInvoiceDueAfterSeconds, field.TypeInt64, value)
	}
	if bwcouo.mutation.InvoiceDueAfterSecondsCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceDueAfterSeconds, field.TypeInt64)
	}
	if value, ok := bwcouo.mutation.InvoiceCollectionMethod(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceCollectionMethod, field.TypeEnum, value)
	}
	if bwcouo.mutation.InvoiceCollectionMethodCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceCollectionMethod, field.TypeEnum)
	}
	if value, ok := bwcouo.mutation.InvoiceLineItemResolution(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceLineItemResolution, field.TypeEnum, value)
	}
	if bwcouo.mutation.InvoiceLineItemResolutionCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceLineItemResolution, field.TypeEnum)
	}
	if value, ok := bwcouo.mutation.InvoiceLineItemPerSubject(); ok {
		_spec.SetField(billingworkflowconfigoverride.FieldInvoiceLineItemPerSubject, field.TypeBool, value)
	}
	if bwcouo.mutation.InvoiceLineItemPerSubjectCleared() {
		_spec.ClearField(billingworkflowconfigoverride.FieldInvoiceLineItemPerSubject, field.TypeBool)
	}
	_node = &BillingWorkflowConfigOverride{config: bwcouo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, bwcouo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{billingworkflowconfigoverride.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	bwcouo.mutation.done = true
	return _node, nil
}
